name: Publish to Itch.io

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version_name:
        description: "Version name for this upload"
        required: false
        default: "latest"

permissions:
  contents: write

jobs:
  publish-to-itch:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version name
        id: get_version
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            VERSION_NAME=${GITHUB_REF#refs/tags/}
          else
            VERSION_NAME="${{ github.event.inputs.version_name }}"
            if [ "$VERSION_NAME" = "latest" ] || [ -z "$VERSION_NAME" ]; then
              VERSION_NAME=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
            fi
          fi
          echo "version_name=$VERSION_NAME" >> $GITHUB_OUTPUT
          echo "Using version: $VERSION_NAME"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build game package
        run: |
          chmod +x deploy.sh
          ./deploy.sh

      - name: Verify build output
        run: |
          if [ ! -f "game.zip" ]; then
            echo "Error: game.zip was not created"
            exit 1
          fi
          echo "Build successful! Created game.zip"
          ls -la game.zip

      - name: Extract game files for itch.io
        run: |
          mkdir -p itch-build
          unzip game.zip -d itch-build/
          ls -la itch-build/

      - name: Setup Butler (itch.io CLI)
        run: |
          curl -L -o butler.zip https://broth.itch.ovh/butler/linux-amd64/LATEST/archive/default
          unzip butler.zip
          chmod +x butler
          ./butler -V

      - name: Login to itch.io
        env:
          BUTLER_API_KEY: ${{ secrets.ITCH_IO_API_KEY }}
        run: |
          ./butler login

      - name: Debug target path
        run: |
          echo "Target will be: ${{ secrets.ITCH_IO_USERNAME }}/${{ secrets.ITCH_GAME }}:html5"
          echo "Version: ${{ steps.get_version.outputs.version_name }}"
          echo "Checking if game exists..."

      - name: Push to itch.io
        env:
          BUTLER_API_KEY: ${{ secrets.ITCH_IO_API_KEY }}
        run: |
          ./butler push itch-build/ ${{ secrets.ITCH_IO_USERNAME }}/${{ secrets.ITCH_GAME }}:html5 --userversion=${{ steps.get_version.outputs.version_name }}

      - name: Create GitHub Release
        if: github.event_name == 'push'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.version_name }}
          name: Ping Pong Game ${{ steps.get_version.outputs.version_name }}
          body: |
            ## Ping Pong Game Release ${{ steps.get_version.outputs.version_name }}

            üéÆ **Ready to play!** This release has been automatically deployed to itch.io

            ### Play the game:
            üïπÔ∏è **[Play on Itch.io](https://{{ secrets.ITCH_IO_USERNAME }}.itch.io/{{ secrets.ITCH_GAME }})**

            ### What's included:
            - Complete game files with optimized structure
            - All assets and sounds
            - Phaser 3 runtime (flattened structure)

            ### Or download for local play:
            1. Download `ping-pong-game.zip`
            2. Extract and open `index.html` in your browser
            3. Enjoy the game!

            ### üöÄ Automated Deployment
            - Automatically uploaded to itch.io
            - Set as HTML5 playable game
            - Version tagged as ${{ steps.get_version.outputs.version_name }}

            Built with Phaser 3 üöÄ
          draft: false
          prerelease: false
          files: game.zip
          generate_release_notes: false
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: itch-build-${{ steps.get_version.outputs.version_name }}
          path: |
            game.zip
            itch-build/
          retention-days: 30
